<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sangbill</groupId>
	<artifactId>lqb-sprj</artifactId>
    <version>1.0</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>
	<!-- 在父工程里管理子项目需要使用的依赖,方便统一控制版本 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.5.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Brixton.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>lqb-sprj-1.0</finalName>
		<plugins>
			<plugin>  
	            <groupId>org.apache.maven.plugins</groupId>  
	            <artifactId>maven-compiler-plugin</artifactId>  
	            <version>3.3</version>  
	            <configuration>  
	                <source>1.8</source>  
	                <target>1.8</target>  
	            </configuration>  
	            <dependencies>  
	                <dependency>  
	                    <groupId>org.codehaus.plexus</groupId>  
	                    <artifactId>plexus-compiler-eclipse</artifactId>  
	                    <version>2.2</version>  
	                </dependency>  
	            </dependencies>  
	        </plugin>
	        <plugin>
	           <groupId>org.projectlombok</groupId>
	           <artifactId>lombok-maven-plugin</artifactId>
	           <version>1.16.14.0</version>
	      	</plugin>
	      	<plugin>    
			    <groupId>org.apache.maven.plugins</groupId>    
			    <artifactId>maven-surefire-plugin</artifactId>    
			    <version>2.5</version>    
			    <configuration>    
			        <skipTests>true</skipTests>    <!-- 跳过测试用例 -->
			    </configuration>    
			</plugin> 
			<plugin>
	            <artifactId>maven-resources-plugin</artifactId>
	            <version>2.5</version>
	            <executions>
	                <execution>
	                    <id>copy-xmls</id>
	                    <phase>process-sources</phase>
	                    <goals>
	                        <goal>copy-resources</goal>
	                    </goals>
	                    <configuration>
	                        <outputDirectory>${basedir}/target/classes</outputDirectory>
	                        <resources>
	                        	<!-- 打包不同环境的配置文件 -->
	                            <resource>
	                                <directory>${basedir}/src/main/conf/${package.environment}</directory>
	                                <includes>
	                                    <include>**/*.*</include>
	                                </includes>
	                            </resource>
	                        </resources>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<!-- 生成的jar中,不包含pom.xml和pom.properties这两个文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<!-- 是否要把第三方jar放到manifest的classpath中 -->
							<addClasspath>true</addClasspath>
							<!-- 生成的manifest中classpath的前缀,第三方jar在lib目录下,前缀是lib/ -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- 应用的main class -->
							<mainClass>com.sangbill.Application</mainClass>
							<!-- 过滤掉不希望包含在jar中的文件 -->
						</manifest>
						<manifestEntries>  
                            <Class-Path>./conf/</Class-Path>  
                        </manifestEntries>
					</archive>
					<excludes>
						<!-- 指定打包时要排除的文件,支持正则 -->
          				<exclude>config/**</exclude> 
          				<exclude>mapper/**</exclude> 
          				<exclude>portal/**</exclude>
          				<exclude>static/**</exclude>
          				<exclude>templates/**</exclude>
        			</excludes>
				</configuration>
			</plugin>
			<!-- The configuration of maven-assembly-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Specifies the configuration file of the assembly plugin -->
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<skipTests>true</skipTests> <!-- 打包时跳过执行测试用例 -->
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id><!-- 此处指定继承合并 -->
						<phase>package</phase><!-- 绑定到打包阶段 -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
	    <profile>
	        <!-- 开发环境 -->
	        <id>dev</id>
	        <properties>
	            <package.environment>dev</package.environment>
	        </properties>
	    </profile>
	    <profile>
	        <!-- 测试环境 -->
	        <id>uat</id>
	        <properties>
	            <package.environment>uat</package.environment>
	        </properties>
	    </profile>
	    <profile>
	        <!-- 生产环境 -->
	        <id>prd</id>
	        <properties>
	            <package.environment>prd</package.environment>
	        </properties>
	    </profile>
	</profiles>
</project>